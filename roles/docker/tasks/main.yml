---
# tasks file for docker

- name: Include OS-specific variables
  #include_vars: "{{ item }}"
  include_vars: "{{ ansible_os_family }}.yml"

  # Debian needs some extra steps:
- include_tasks: debian.yml
  when: ansible_os_family == 'Debian'


- name: Ensure Docker package is installed
  package:
    name: "{{ docker_package }}"
    state: present


- name: Ensure docker-compose is installed
  package:
    name: docker-compose
    state: present


- name: Ensure docker data directory
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ docker_environment.docker_data }}"
    - "{{ docker_environment.docker_workspace }}"


- name: Deploy all service files
  copy:
    src: "{{ item }}"
    dest: "/etc/systemd/system/{{ item }}"
    owner: root
    group: root
    mode: '0644'
  with_items:
    - docker@.service
    - docker-cleanup.service
    - docker-cleanup.timer


- name: deploy docker-cleanup.sh file
  copy:
    src: docker-cleanup.sh
    dest: /usr/local/bin/docker-cleanup.sh
    mode: 0555

- name: Start and Enable Services
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
    daemon_reload: true
  with_items:
    - docker
    - docker-cleanup.timer


- name: Deploy docker environment file
  template:
    src: docker_env.j2
    dest: /etc/docker/docker.env
    mode: 440


# This file fill source the docker environment for bash
- name: Deploy source file for docker.env
  copy:
    src: docker-env.sh
    dest: /etc/profile.d/docker-env.sh
    mode: 440

