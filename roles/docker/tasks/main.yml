---
# tasks file for docker

- name: Include OS-specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - files:
      - "vars/{{ ansible_os_family }}.yml"

  # Debian needs some extra steps:
- include_tasks: debian.yml
  when: ansible_os_family == 'Debian'


- name: Ensure Docker package
  package:
    name: [ "{{ docker_package }}" ]
    state: present

- name: Ensure docker-compose
  get_url:
    url: https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-Linux-{{ ansible_architecture }}
    dest: /usr/local/bin/docker-compose
    mode: 0755
  when: ansible_architecture == "x86_64"
  # (there is no binary for docker-compose on arm64)

- name: Ensure docker data directory
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - /mnt/docker
    - /mnt/workspace

- name: Deploy all service files
  copy:
    src: "{{ item }}"
    dest: "/etc/systemd/system/{{ item }}"
    owner: root
    group: root
    mode: '0644'
  with_items:
    - docker@.service
    - docker-cleanup.service
    - docker-cleanup.timer


- name: deploy docker-cleanup.sh file
  copy:
    src: docker-cleanup.sh
    dest: /usr/local/bin/docker-cleanup.sh
    mode: 0555

- name: Start and Enable Services
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
    daemon_reload: true
  with_items:
    - docker
    - docker-cleanup.timer
